{
	"info": {
		"_postman_id": "2001c729-2f06-4f97-af41-8aec71e5bcd0",
		"name": "udacity-fsnd-capstone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.actors).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.movies).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tom Holland\",\n    \"age\": 24,\n    \"gender\": \"M\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Developer\",\n    \"release_date\": \"20-5-2023\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movies\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"20-5-2025\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImMya05GeW00U1k4RjlyQlp4djNBeCJ9.eyJpc3MiOiJodHRwczovL3NlLWZzbmQudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwNzFhZTIwMzQ4NmEyMDA2OTc4ZTM2OCIsImF1ZCI6ImFnZW5jeSIsImlhdCI6MTYxODE0NjEzOCwiZXhwIjoxNjE4MTUzMzM4LCJhenAiOiJ5S2l1OUY4SnNVdEtlbFp3dG9iNGVRSEdpaWNCUWFTSiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiXX0.rRRxl_x9QLwetFExbEtZqQBfH_vQrUPjz8HWfTdj0z7TTLqBPtQum00bI5G_Suyi4mAM2H1gMA4i7ZISe3i58pDHpNsyumqMqWRNMxQcLNwLKLg-qCIkdUCNA_gr0LdPAEIa8ynOuCqkJtEdKXRAzT6_uRZNqRtiYwhfqLKVAZ2xFhxj-jxz_q8IuUIn76AL9wBflHJWa9SfeDQRC1k4V4w7sUsHxZzReWHffM5Ldy4hnfdVrbWvqF4BHXZRZVxVSzJqlAK-s7jbEmJu8laHoEinZv-3gZES5klF4ptIChXLXUK-wa_-V_2MZ-nL2BmX-Sq-uE9UBWLoL7hDWb5U6w",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.actors).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.movies).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});",
									"\t\t"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tom Holland\",\n    \"age\": 24,\n    \"gender\": \"M\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Developer\",\n    \"release_date\": \"20-5-2023\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 35\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"\tpm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"20-5-2025\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImMya05GeW00U1k4RjlyQlp4djNBeCJ9.eyJpc3MiOiJodHRwczovL3NlLWZzbmQudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwMmU3NWM1N2I0MjhjMDA2YTc1Njc0MCIsImF1ZCI6ImFnZW5jeSIsImlhdCI6MTYxODE0NjA5MSwiZXhwIjoxNjE4MTUzMjkxLCJhenAiOiJ5S2l1OUY4SnNVdEtlbFp3dG9iNGVRSEdpaWNCUWFTSiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiXX0.UuvgvM0-kJ10NA1H51qgO-4HKRGYIc6k8lpb9bl6V7ZSDHi4m8lCTkfjUZdjCKvMGy2e2QhOQDI_jvwioikO62-LNzcbuollBrdRQQXFEECcrlEkcwza7VdS7gASRWUVDapzHBd3IE141b62s2E-bM9j2oblFcFaOeKojNThjr45H09nkgkf-sfTWp8lM0FN4zbBQT7m0S1B2zlUPmxowpXVzk256JhaQb3A6x5JJQ7LvPU-T3DwUHKCx0_QeKCvRDCETTBizuCDpvrvXWbMtJzeRQIssi-tkn4Q06tRtvFtpoMwM-5mZGHl5oFS9IJsLckAGEV3G979recgyI2I1A",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Exective Producer",
			"item": [
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.actors).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.movies).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tom Holland\",\n    \"age\": 24,\n    \"gender\": \"M\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Developer\",\n    \"release_date\": \"20-5-2023\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movies\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"20-5-2025\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/2",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImMya05GeW00U1k4RjlyQlp4djNBeCJ9.eyJpc3MiOiJodHRwczovL3NlLWZzbmQudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwM2I3Yjk3ODc1NmRmMDA2OWE0NzllOCIsImF1ZCI6ImFnZW5jeSIsImlhdCI6MTYxODE0NTk1OCwiZXhwIjoxNjE4MTUzMTU4LCJhenAiOiJ5S2l1OUY4SnNVdEtlbFp3dG9iNGVRSEdpaWNCUWFTSiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImRlbGV0ZTptb3ZpZXMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIiwicG9zdDptb3ZpZXMiXX0.YE8qxuGpqI9UziJB_5k1eeYQcg959I3vYSg3Hvg4tJH_ZB2svB9EbzrJvql1YOcMhBr6csp3SHHyFRQbYQWnO5CF09Iv36r0KBmXYTX3peXvqrCvhc5orM2EJPJRocrtcLU-8_Lm-sbrnMz5xHRCM-QZ2piiRqwjXWeJS1iarubWw6x9IsgOJZ8SNFFtJOwiOGGiU6-hkLjEvvYOyRp8adc6h2zTgPANjEDuchHa09yIRjZ81LfnWuxW-YdiHuSyry83paerM8mhCIsjLkbkKCyGpyuX2vlPVht5ZAjbgeupPAIIkTzCk6HU5Z_RUuMcuJNJKJt6h3CItCXjdvlaKw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000"
		}
	]
}