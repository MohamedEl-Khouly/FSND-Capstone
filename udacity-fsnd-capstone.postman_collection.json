{
	"info": {
		"_postman_id": "2001c729-2f06-4f97-af41-8aec71e5bcd0",
		"name": "udacity-fsnd-capstone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Casting Assistant",
			"item": [
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.actors).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.movies).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tom Holland\",\n    \"age\": 24,\n    \"gender\": \"M\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Developer\",\n    \"release_date\": \"20-5-2023\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movies\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"20-5-2025\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImMya05GeW00U1k4RjlyQlp4djNBeCJ9.eyJpc3MiOiJodHRwczovL3NlLWZzbmQudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwNzFhZTIwMzQ4NmEyMDA2OTc4ZTM2OCIsImF1ZCI6ImFnZW5jeSIsImlhdCI6MTYxODA2Mjk5NCwiZXhwIjoxNjE4MDcwMTk0LCJhenAiOiJ5S2l1OUY4SnNVdEtlbFp3dG9iNGVRSEdpaWNCUWFTSiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmFjdG9ycyIsImdldDptb3ZpZXMiXX0.RDAoRf0m8Z6B3x_GvEx8BQBYtMcOhjzcs3P2ldJWmpNh8SJX04e0AOT0TwpjldqCDF3M6-hTvt5uDqNhnl1Fli9DOrl4GE6V-Tpr-j8SdO8cE_UHNxSXrJ3ZUzxHUNGeT2k_ucRvJK8gcx7wedYS95Vf2_HDxpjBy7Xk-F5vA4MPLGRz8w6hkjSwfrFRIxUujbrw0qHXp-qreLhWod6VgjOYd3iijNv5X64fRrc1kzxGPT7dylWeCNLk-XDVVffKw2yGc8yP2W3gbQvxCFn4Jy4S8Xi2_Q1F7QG6rlYfVBaREpfIM73Ywh_l_MBmBzFmutSjuOim5KzpQECbMHnsNA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Casting Director",
			"item": [
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.actors).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.movies).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});",
									"\t\t"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tom Holland\",\n    \"age\": 24,\n    \"gender\": \"M\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Developer\",\n    \"release_date\": \"20-5-2023\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\t\tpm.test(\"Status code is 401\", function () {",
									"\t\t\tpm.response.to.have.status(401);",
									"\t\t});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"20-5-2025\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movies\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImMya05GeW00U1k4RjlyQlp4djNBeCJ9.eyJpc3MiOiJodHRwczovL3NlLWZzbmQudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwMmU3NWM1N2I0MjhjMDA2YTc1Njc0MCIsImF1ZCI6ImFnZW5jeSIsImlhdCI6MTYxODA2MzA3MCwiZXhwIjoxNjE4MDcwMjcwLCJhenAiOiJ5S2l1OUY4SnNVdEtlbFp3dG9iNGVRSEdpaWNCUWFTSiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImdldDphY3RvcnMiLCJnZXQ6bW92aWVzIiwicGF0Y2g6YWN0b3JzIiwicGF0Y2g6bW92aWVzIiwicG9zdDphY3RvcnMiXX0.AZl165_1Ry7z4KqpyOqNLTExq3dMwlaQI7LJzrF-63GgKcUqqkqwItqgqE8Yk84ywamhd3S8SV8FkxzV3Fs5IK7Z-XayMUqDm1aeQn_tgtvJTkwuwnh-NvpZpZHymBNicsKD83vUf9EDJmvG3POIE9ICo133TmQqFiABhzaVN5IwIVN3rbg630vkDCGW-rqyY2Q7csM521JAtK0YzueJv5n8U8MZjnPB5cfOJumfMv3oSyUCAZYIuJgsm4Y3QU3M39GlUu4JuCteb6hpevS2FAFtNLVNaUyQyEEnG0duMZBuJjKPELhZO9Mi_TJbjtiJKXt4hW_129_rJykSxK5IHA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Exective Producer",
			"item": [
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains actors array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.actors).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status is 200\", function (){",
									"\tpm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"value contains movies array\", function () {",
									"\tconst jsonData = pm.response.json();",
									"\tpm.expect(jsonData.movies).to.be.an('array')",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tom Holland\",\n    \"age\": 24,\n    \"gender\": \"M\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Developer\",\n    \"release_date\": \"20-5-2023\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"movies\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"release_date\": \"20-5-2025\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"\tpm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImMya05GeW00U1k4RjlyQlp4djNBeCJ9.eyJpc3MiOiJodHRwczovL3NlLWZzbmQudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYwM2I3Yjk3ODc1NmRmMDA2OWE0NzllOCIsImF1ZCI6ImFnZW5jeSIsImlhdCI6MTYxODA2MzExNCwiZXhwIjoxNjE4MDcwMzE0LCJhenAiOiJ5S2l1OUY4SnNVdEtlbFp3dG9iNGVRSEdpaWNCUWFTSiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmFjdG9ycyIsImRlbGV0ZTptb3ZpZXMiLCJnZXQ6YWN0b3JzIiwiZ2V0Om1vdmllcyIsInBhdGNoOmFjdG9ycyIsInBhdGNoOm1vdmllcyIsInBvc3Q6YWN0b3JzIiwicG9zdDptb3ZpZXMiXX0.TMFY38A2btQ_TtmQ8dK-HL4tC6yYXBRrtuJq-JHebIr45AphCC8F0bgoA8XW3m3NoS9J3C5a3OlRFpTkUQxP5o-aDdFi-PqmFzxJC8GU1dDbAxexz4bIJ3zxU5CFCPDH_Vf3DluyugVwucoorv1p0l2eGjtSc5a9K8THFYkHa6eg8tSfcXZR1k_4s19KCniCgr4p57sHxYxHgVIU6mMim1fBSZv_v675meYktV6RQb7TaiFZUlsPfEnI0_-hALBvsBXWy_mj6zWAo7nvMaRwBjufuXwx1OrKxt1hqXOBqtGxyeeXEGvSi0n4KP2995xjjYxSwngemIQ4G17QcDMEMA",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000"
		}
	]
}